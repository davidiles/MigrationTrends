
    
    model {
      
      #---------------------------------------------
      # Model for population dynamics in each region
      #---------------------------------------------

      # No uncertainty in initial abundance; logN0[r] is fed in as data
        
      for (r in 1:nregion){
        trend[r] ~ dnorm(0,1) # Regional trends
      }
      
      # Temporal variance in trend
      proc.sd ~ dunif(0,2)
      proc.tau <- pow(proc.sd,-2)
      
      # True (unobserved) population dynamics in each region
      for (y in 1:nyear){
        for (r in 1:nregion){
        
          # Exponential population model
          logN[r,y] <- logN0[r] + trend[r] * (y-1) + noise[r,y]
          noise[r,y] ~ dnorm(0,proc.tau)
          N[r,y] <- exp(logN[r,y])
        }
      }
      
      #---------------------------------------------
      # Observed numbers of birds at station [s] originating from region [r] in year [y]
      #---------------------------------------------
      
      # Proportion of birds from region [r] that are 
      # captured by station [s] (constant through time)
      for (r in 1:nregion){
        for (s in 1:nstation){
          rho[r,s] ~ dunif(0,1) 
        }
      }
      
      for (s in 1:nstation){
        for (y in 1:nyear){
          for (r in 1:nregion){
          
            # Seasonal total arriving at station [s] from region [r]
            mu[r,s,y] <- N[r,y] * rho[r,s]    
          
          }
        
          # Total seasonal count at station [s]
          true.total[s,y] <- sum(mu[1:nregion,s,y]) 
          
          # Multinomial to describe regional composition in this year, at this station
          N.isotope[1:nregion,s,y] ~ dmulti(mu[,s,y], N.station.sampled[s,y])
          
        }
      }
      
      #---------------------------------------------
      # Estimate totals at each station each year
      #---------------------------------------------
 
      for (s in 1:nstation){
      
      mean.migrate.HYPERMEAN[s] ~ dunif(1,nday)
      mean.migrate.HYPERSD[s] ~ dunif(0,nday/2)
      mean.migrate.HYPERTAU[s] <- pow(mean.migrate.HYPERSD[s], -2)
      
      # Parameter describing the width of the migration window (assume this window is constant)
      sd.migrate[s] ~ dunif(0,nday/2)
        
      daily.noise.sd[s] ~ dunif(0,2)
      daily.noise.tau[s] <- pow(daily.noise.sd[s],-2)
      
        for (y in 1:nyear){
        
        mean.migrate[s,y] ~ dnorm(mean.migrate.HYPERMEAN[s], mean.migrate.HYPERTAU[s])
        
          for (d in 1:nday){
            
            norm.density[d,s,y] <- 1/(sqrt(2*pi)*sd.migrate[s])*exp(-((d-mean.migrate[s,y])^2/(2*sd.migrate[s]^2)))
            
            # Expected count on each day
            expected.count[d,s,y] <- norm.density[d,s,y] * true.total[s,y]
            
            # Daily observation error
            daily.noise[d,s,y] ~ dnorm(0,daily.noise.tau[s])
            
            log.lambda[d,s,y] <- log(expected.count[d,s,y]) + daily.noise[d,s,y]

          }
        }
      }
      
      for (i in 1:nobs){
        log.lam[i] <- log.lambda[day[i],station[i],year[i]] + log.offset[i]
        lam[i] <- exp(log.lam[i])
        daily.count[i] ~ dpois(lam[i])
      }
      
      
      #---------------------------------------------
      # Derived quantities
      #---------------------------------------------
      
      # Total birds across all regions (used to determine national trend)
      for (y in 1:nyear){
        N.total[y] <- sum(N[,y])
      }
      
    }
    
