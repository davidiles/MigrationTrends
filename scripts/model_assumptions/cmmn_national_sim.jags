
    
    model {
      
      #---------------------------------------------
      # Model for population dynamics in each region
      #---------------------------------------------
      
      # Trends and initial abundance in each region [r]
      mean.trend ~ dnorm(0,1) # Grand mean of temporal trend
      sd.trend.spatial ~ dunif(0,1) # Spatial variance in trends
      tau.trend.spatial <- pow(sd.trend.spatial, -2)
      
      for (r in 1:nregion){
      
        logN0.uncert[r] <- logN0[r]
        trend[r] ~ dnorm(0,1)

      }
      
      # Temporal variance in trend
      proc.sd ~ dunif(0,2)
      proc.tau <- pow(proc.sd,-2)
      
      # True (unobserved) population dynamics in each region
      for (y in 1:nyear){
        for (r in 1:nregion){
        
          # Exponential population model
          logN[r,y] <- logN0.uncert[r] + trend[r] * (y-1) + noise[r,y]
          noise[r,y] ~ dnorm(0,proc.tau)
          N[r,y] <- exp(logN[r,y])
        }
      }
      
      #---------------------------------------------
      # Observed numbers of birds at station [s] originating from region [r] in year [y]
      #---------------------------------------------
      

      for (r in 1:nregion){
        for (s in 1:nstation){
        
          rho[r,s] ~ dunif(0,1) # Proportion of birds from region [r] that are captured by station [s] (constant through time)
          
        }
      }
      
      for (s in 1:nstation){
        for (y in 1:nyear){
          for (r in 1:nregion){
          
            mu[r,s,y] <- N[r,y] * rho[r,s] # Seasonal total arriving at station [s] from region [r]  
          
          }
      
          true.total[s,y] <- sum(mu[1:nregion,s,y]) # Total seasonal count at station [s]
          N.isotope[1:nregion,s,y] ~ dmulti(mu[,s,y], N.station.sampled[s,y]) # Multinomial to describe regional composition in this year, at this station
          
        }
      }
      
      #---------------------------------------------
      # Estimate totals at each station each year
      #---------------------------------------------
      
        
      for (s in 1:nstation){
      
        daily.noise.sd[s] ~ dunif(0,2)
        daily.noise.tau[s] <- pow(daily.noise.sd[s],-2)
        
        mean.migrate.HYPERMEAN[s] ~ dunif(1,nday)
        mean.migrate.HYPERSD[s] ~ dunif(0,nday)
        mean.migrate.HYPERTAU[s] <- pow(mean.migrate.HYPERSD[s], -2)
      
        sd.migrate[s] ~ dunif(0,nday)
          
        for (y in 1:nyear){
        
          mean.migrate[s,y] ~ dnorm(mean.migrate.HYPERMEAN[s], mean.migrate.HYPERTAU[s])

          for (d in 1:nday){
            
            norm.density[d,s,y] <- 1/(sqrt(2*pi)*sd.migrate[s])*
                exp(-((d-mean.migrate[s,y])^2/(2*sd.migrate[s]^2)))
            
            # Expected count on each day
            expected.count[d,s,y] <- norm.density[d,s,y] * true.total[s,y]
            
            # Daily observation error
            daily.noise[d,s,y] ~ dnorm(0,daily.noise.tau[s])
            
            lambda[d,s,y] <- exp(log(expected.count[d,s,y]) + daily.noise[d,s,y])
            daily.count[d,s,y] ~ dpois(lambda[d,s,y])
            
          }
        }
      }
      
      #---------------------------------------------
      # Derived quantities
      #---------------------------------------------
      
      # Total birds across all regions (used to determine national trend)
      for (y in 1:nyear){
        N.total[y] <- sum(N[,y])
      }
      
    }
    
